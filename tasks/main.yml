---
- name: generate user password
  shell: python -c "import uuid; from passlib.hash import sha512_crypt; print sha512_crypt.using(rounds=5000).hash(str(uuid.uuid4().get_hex()[0:64]))" | tee {{ user }}.password
  changed_when: false
  delegate_to: localhost
  become: false

- name: "add {{ user }} user"
  user:
    name: '{{ user }}'
    state: present
    groups: sudo
    append: true
    password: "{{ lookup('file', user + '.password') }}"
    update_password: on_create

- name: add ssh key
  authorized_key:
    user: '{{ user }}'
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: add user to passwordless sudo
  lineinfile:
    line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    create: true
    dest: /etc/sudoers.d/{{ user }}

- name: harden the ssh config
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: '{{ item.line }}'
    regexp: '{{ item.regexp }}'
    state: present
  with_items:
    - line: 'PermitRootLogin no'
      regexp: 'PermitRootLogin (yes|no)'
    - line: 'PasswordAuthentication no'
      regexp: 'PasswordAuthentication (yes|no)'
  notify:
    - restart sshd

- name: apt-get essential stuff
  apt:
    name: '{{ item }}'
    state: present
    cache_valid_time: 36000
    update_cache: yes
  with_items:
    - fail2ban
  tags:
    - apt
  
- name: update fail2ban config
  ini_file:
    dest: /etc/fail2ban/jail.conf
    section: '{{ item.section }}'
    option: '{{ item.opt }}'
    value: '{{ item.val }}'
  notify:
    - restart fail2ban
  with_items:
    - section: sshd
      opt: enabled
      val: 'true'
    - section: DEFAULT
      opt: destemail
      val: '{{ fail2ban_email }}'
    - section: DEFAULT
      opt: sender
      val: fail2ban@{{ ansible_fqdn }}
  tags:
    - fail2ban

